{
  "openapi": "3.0.0",
  "info": {
    "title": "Tenant Admin API",
    "version": "1.0.0",
    "description": "API to exercise Tenant Admin functionality including Project creation etc. User must have Tenant Admin privilege to execute these APIs."
  },
  "servers": [
    {
      "url": "{accelqLoginUrl}/awb/api/1.0/{tenantCode}",
      "variables": {
        "accelqLoginUrl": {
          "default": "",
          "description": "Base URL for AccelQ login"
        },
        "tenantCode": {
          "default": "",
          "description": "Tenant code for your subscription"
        }
      }
    }
  ],
  "paths": {
    "/admin/projects": {
        "get": {
        "tags":["Projects"],
        "summary": "Retrieve list of Projects in the Tenant",
        "description": "Retrieve paginated list of Projects in the Tenant.",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "user_id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Login username (email)"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key of the user for authentication"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of items per page (maximum: 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Current page number",
                      "example": 1
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Number of items per page",
                      "example": 4
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total number of pages",
                      "example": 10
                    },
                    "totalItems": {
                      "type": "integer",
                      "description": "Total number of projects",
                      "example": 15
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pid": {
                            "type": "integer",
                            "description": "Project ID",
                            "example": 3
                          },
                          "projectDisplayName": {
                            "type": "string",
                            "description": "Display name of the project",
                            "example": "New Project"
                          },
                          "projectCode": {
                            "type": "string",
                            "description": "Internal name of the project",
                            "example": "NewProject"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description for the new project",
                            "example": "Description for the new project"
                          },
                          "createdUserPid": {
                            "type": "integer",
                            "description": "PID of the user who created the project",
                            "example": 1
                          },
                          "createdTimestamp": {
                            "type": "integer",
                            "description": "Timestamp when the project was created",
                            "example": 1728040036528
                          }
                        }
                      },
                      "example":[
                          {
                              "pid": 1,
                              "projectDisplayName": "New Project",
                              "projectCode": "NewProject",
                              "description": "Description for the new project",
                              "createdUserPid": 1,
                              "createdTimestamp": 1629040036528
                            },
                            {
                              "pid": 3,
                              "projectDisplayName": "Acme Project",
                              "projectCode": "AcmeProject",
                              "description": "Description for the acme project",
                              "createdUserPid": 1,
                              "createdTimestamp": 1898040036528
                            },
                            {
                              "pid": 6,
                              "projectDisplayName": "Test Project",
                              "projectCode": "TestProject",
                              "description": "Description for the new project",
                              "createdUserPid": 1,
                              "createdTimestamp": 1828040036528
                            }, 
                            {
                              "pid": 7,
                              "projectDisplayName": "Practice Project",
                              "projectCode": "PracticeProject",
                              "description": "Description",
                              "createdUserPid": 1,
                              "createdTimestamp": 1728040036528
                            }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page number or page size",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "invalidPage": {
                    "summary": "Page number too high",
                    "value": {
                      "error": "Requested page exceeds available pages."
                    }
                  },
                  "invalidSize": {
                    "summary": "Page size out of range",
                    "value": {
                      "error": "Page size must be between 1 and 100."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "error": "User do not have authorization to access this feature."
                }
              }
            }
          }
        }
      },
    "post": {
         "tags":["Projects"],
        "summary": "Create a new Project",
        "description": "Create a new project in the Tenant. Project name must adhere to the following criteria: <br/>   &nbsp; &nbsp; 1.Must always start with a alphabetic character<br/>   &nbsp; &nbsp; 2.Maximum length of 256 characters <br/>   &nbsp; &nbsp; 3.Only letters, digits, spaces, and underscores  allowed",
        "parameters": [
          {
            "name": "user_id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Login username (email)"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key of the user for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "Name of the new project. Validation rules: Cannot start with a digit, can only contain alphabets, spaces, underscores, and digits, max length 256 characters, must be unique within the tenant.",
                    "example": "New Project",
                    "minLength": 1,
                    "maxLength": 256,
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_ ]*$"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the new project. Maximum length: 500 characters.",
                    "example": "Description for the new project",
                    "maxLength": 500
                  },
                  "cloneConfigFromProjectPid": {
                    "type": "integer",
                    "description": "The project PID from which to clone configuration data. Must be an existing project PID.",
                    "example": 5
                  },
                  "assignedUsers": {
                    "type": "array",
                    "description": "List of users to be assigned to the project. At least one user must be assigned.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userEmail": {
                          "type": "string",
                          "description": "Login Email of the user. Must  be an existing user in the system.",
                          "example": "user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "description": "Role assigned to the user. Must be an existing role.",
                          "example": "developer"
                        },
                        "isAdmin":{
                            "type":"boolean",
                            "description":"Whether to assign Project admin role to this user."
                        }
                      },
                      "required": [
                        "userId",
                        "role"
                      ]
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "projectName",
                  "assignedUsers"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pid": {
                      "type": "integer",
                      "example": 3
                    },
                    "projectDisplayName": {
                      "type": "string",
                      "example": "New Project"
                    },
                    "projectCode": {
                      "type": "string",
                      "example": "NewProject"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description for the new project"
                    },
                    "createdUserPid": {
                      "type": "integer",
                      "example": 1
                    },
                    "createdTimestamp": {
                      "type": "integer",
                      "example": 1728040036528
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                },
                "examples": {
                  "invalidName": {
                    "summary": "Name validation error",
                    "value": {
                      "error": "Project name validation failed: Cannot start with digit, max length 256, only alphabets, digits, spaces, and underscores allowed."
                    }
                  },
                  "limitReached": {
                    "summary": "Max Project limit reached",
                    "value": {
                      "error": "Maximum Project limit of 500 reached. Unable to create additional Projects."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have permission to create projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User do not have authorization to access this feature."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Invalid cloneConfigFromProjectPid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project with PID 5 does not exist."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Duplicate project name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project with the same name already exists."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation errors occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Detailed validation error message"
                    }
                  }
                },
                "examples": {
                  "userNotFound": {
                    "summary": "User not found",
                    "value": {
                      "error": "User with email 'user@example.com' does not exist."
                    }
                  },
                  "roleNotFound": {
                    "summary": "Role not found",
                    "value": {
                      "error": "Role 'developer' does not exist."
                    }
                  },
                  "noUserAssigned": {
                    "summary": "At least one user must be assigned",
                    "value": {
                      "error": "At least one user must be assigned to the project."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
     "/admin/projects/{pjPid}/clone": {
      "post": {
         "tags":["Projects"],
        "summary": "Clone a Project",
        "description": "Clone an existing project and create a new one with an optional branching.",
        "operationId": "cloneProject",
        "parameters": [
          {
            "name": "user_id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Login username (email)"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key of the user for authentication"
          },
          {
            "name": "pjPid",
            "in": "path",
            "required": true,
            "description": "The ID of the project to clone.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "New project name",
                    "example": "Name of the cloned Project"
                  },
                  "description": {
                    "type": "string",
                    "description": "New project description",
                    "example": "Description for the cloned project"
                  },
                  "branching": {
                    "type": "boolean",
                    "description": "Create new branch project",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project cloned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pid": {
                      "type": "integer",
                      "description": "Project ID",
                      "example": 3
                    },
                    "projectDisplayName": {
                      "type": "string",
                      "description": "Display name of the project",
                      "example": "New Project"
                    },
                    "projectCode": {
                      "type": "string",
                      "description": "Internal name of the project",
                      "example": "NewProject"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the new project",
                      "example": "Description for the new project"
                    },
                    "createdUserPid": {
                      "type": "integer",
                      "description": "PID of the user who created the project",
                      "example": 1
                    },
                    "createdTimestamp": {
                      "type": "integer",
                      "description": "Timestamp when the project was created",
                      "example": 1728040036528
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                },
                "examples": {
                  "invalidName": {
                    "summary": "Name validation error",
                    "value": {
                      "error": "Project name validation failed: Cannot start with digit, max length 256, only alphabets, digits, spaces, and underscores allowed."
                    }
                  },
                  "limitReached": {
                    "summary": "Max Project limit reached",
                    "value": {
                      "error": "Maximum Project limit of 500 reached. Unable to create additional Projects."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Project name already exists",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "error": "A project with the name 'New Project2' already exists."
                }
              }
            }
          },
          "422": {
            "description": "Project with specified PID not found",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "error": "Project with PID 2 not found."
                }
              }
            }
          }
        }
      }
    },
     "/admin/projects/{pjPid}": {
      "put": {
         "tags":["Projects"],
        "summary": "Update an existing Project",
        "description": "Update the details (name and description) of an existing project.",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "pjPid",
            "in": "path",
            "required": true,
            "description": "The ID of the project to update.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "user_id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Login username (email)"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key of the user for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "Updated name for the project.",
                    "example": "Updated Project Name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Updated description for the project.",
                    "example": "Updated description"
                  }
                },
                "required": [
                  "projectName",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": true
              }
            }
          },
          "409": {
            "description": "Conflict - Project name already exists.",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "error": "A project with the name 'Updated Project Name' already exists."
                }
              }
            }
          },
          "422": {
            "description": "Project with specified PID not found.",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "error": "Project with PID 3 not found."
                }
              }
            }
          }
        }
      }
    }

  }
}

